<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.home.mapper.PostMapper">
  <resultMap type="postDto" id="post">
    <result column="id" property="id"/>
    <result column="user_id" property="userId"/>
    <result column="img_url" property="imgURL"/>
    <result column="create_time" property="createTime"/>
    <collection property="comments" ofType="com.home.dto.CommentDto"
      select="com.home.mapper.CommentMapper.findByPostId" column="id"/>
  </resultMap>

  <resultMap type="postDetailDto" id="postDetail">
    <id column="id" property="id"/>
    <result column="user_id" property="userId"/>
    <result column="name" property="name"/>
    <result column="profile_img_url" property="profileImgURL"/>
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="img_url" property="imgURL"/>
    <result column="like" property="like"/>
    <result column="hit" property="hit"/>
    <result column="create_time" property="createTime"/>
    <collection property="comments" ofType="com.home.dto.CommentDetailDto"
      select="com.home.mapper.CommentMapper.findCommentDetailByPostId" column="id"/>
  </resultMap>

  <select id="findById" parameterType="long" resultMap="post">
    SELECT *
    FROM posts
    WHERE id = #{id}
  </select>

  <select id="findPostDetailById" parameterType="long" resultMap="postDetail">
    SELECT p.*, m.name, m.img_url as profile_img_url
    FROM posts p, members m
    WHERE p.user_id = m.id and p.id = #{id}
  </select>

  <select id="findByUserId" parameterType="long" resultMap="postDetail">
    SELECT p.*, m.name, m.img_url as profile_img_url
    FROM posts p, members m
    WHERE p.user_id = m.id and user_id = #{userId}
  </select>

  <select id="findByEmail" parameterType="string" resultMap="postDetail">
    SELECT p.*, m.name, m.img_url as profile_img_url
    FROM posts p, members m
    WHERE p.user_id = m.id and m.email = #{email}
  </select>

  <select id="findAll" resultMap="post">
    SELECT *
    FROM posts
  </select>

  <select id="findAllPostDetail" resultMap="postDetail">
    SELECT p.*, m.name, m.img_url as profile_img_url
    FROM posts p, members m
    WHERE p.user_id = m.id
  </select>

  <select id="findAllPostDetailWithPagination" resultMap="postDetail">
    SELECT p.*, m.name, m.img_url as profile_img_url
    FROM posts p, members m
    WHERE p.user_id = m.id
    <if test="sort != null and sort.trim() != ''">
      ORDER BY ${sort} ${order}
    </if>
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <insert id="create" parameterType="postDto"  useGeneratedKeys="true" keyProperty="id">
    INSERT INTO posts (user_id, title, content, img_url)
    VALUES (#{userId}, #{title}, #{content}, #{imgURL})
  </insert>

  <update id="update" parameterType="postDto">
    UPDATE posts
    <set>
      <if test="title != null">title = #{title},</if>
      <if test="content != null">content = #{content},</if>
      <if test="imgURL != null">img_url = #{imgURL},</if>
      <if test="like != null">`like` = #{like},</if>
      <if test="hit != null">hit = #{hit},</if>
    </set>
    WHERE id = #{id}
  </update>

  <delete id="delete" parameterType="long">
    DELETE FROM posts where id = #{id}
  </delete>

</mapper>
